@page "/"
@using System.Text.Json
@inject HttpClient Http
@inject IJSRuntime JSRuntime


@* Lägg till Bootstrap CSS *@
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />

<main>
    <div class="wrapper">
        <div class="carousel slide" id="horseCarousel" data-ride="carousel" data-interval="2000">
            <div class="carousel-inner">
                @if (horseImageUrls.Any())
                {
                    @for (int i = 0; i < horseImageUrls.Count; i++)
                    {
                        <div class="carousel-item @(i == 0 ? "active" : "")">
                            <img class="d-block w-100" src="@horseImageUrls[i]" alt="Horse Image @(i + 1)" />
                        </div>
                    }
                }
            </div>
            <a class="carousel-control-prev" href="#horseCarousel" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#horseCarousel" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>

        <div class="btn mt-4">
            <NavLink href="sofia" class="btn btn-primary">Sofia</NavLink>
            <NavLink href="alma" class="btn btn-primary">Alma</NavLink>
         @*    <NavLink href="/Spanish" class="btn btn-primary">Spanska</NavLink> *@
        </div>

        <div class="carousel slide mt-4" id="danceCarousel" data-ride="carousel" data-interval="2000">
            <div class="carousel-inner">
                @if (danceImageUrls.Any())
                {
                    @for (int i = 0; i < danceImageUrls.Count; i++)
                    {
                        <div class="carousel-item @(i == 0 ? "active" : "")">
                            <img class="d-block w-100" src="@danceImageUrls[i]" alt="Dance Image @(i + 1)" />
                        </div>
                    }
                }
            </div>
            <a class="carousel-control-prev" href="#danceCarousel" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#danceCarousel" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
    </div>
</main>

@code {
    private List<string> horseImageUrls = new List<string>();
    private List<string> danceImageUrls = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Hämta hästbilder
            var horseResponse = await Http.GetStringAsync("https://api.unsplash.com/photos/random?query=horse&count=3&client_id=KskWzvW414fiXTLDuI8evhu2N5DdnATSMHR_6tEGY3k");
            var horsePhotoData = JsonSerializer.Deserialize<List<Photo>>(horseResponse);
            horseImageUrls = horsePhotoData
                .Select(photo => photo.urls?.regular)
                .Where(url => url != null)
                .ToList();

            // Hämta dansbilder
            var danceResponse = await Http.GetStringAsync("https://api.unsplash.com/photos/random?query=dance&count=3&client_id=KskWzvW414fiXTLDuI8evhu2N5DdnATSMHR_6tEGY3k");
            var dancePhotoData = JsonSerializer.Deserialize<List<Photo>>(danceResponse);
            danceImageUrls = dancePhotoData
                .Select(photo => photo.urls?.regular)
                .Where(url => url != null)
                .ToList();

            // Scrolla till toppen när sidan laddas
            await JSRuntime.InvokeVoidAsync("scrollTo", 0, 0);
        }
        catch (Exception ex)
        {
            // Hantera eventuella fel
            Console.WriteLine($"Error fetching images: {ex.Message}");
        }
    }

    public class Photo
    {
        public PhotoUrls urls { get; set; }
    }

    public class PhotoUrls
    {
        public string regular { get; set; }
    }
}
